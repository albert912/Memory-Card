1. React State(basic)
-

import { useState } from 'react';

function Example() {
  const [count, setCount] = useState(0);

  return <div onClick={() => setCount(count + 1)}>Count: {count}</div>;
}

2. React State with Props
-

function Child({ count }) {
  return <div>Count from parent: {count}</div>;
}

function Parent() {
  const [count, setCount] = useState(0);

  return (
    <>
      <button onClick={() => setCount(count + 1)}>+</button>
      <Child count={count} />
    </>
  );
}

3. Simple useEffect with return (cleanup)
-

import { useEffect } from 'react';

function Example() {
  useEffect(() => {
    console.log('mounted');

    return () => {
      console.log('cleanup on unmount');
    };
  }, []);

  return <div>Hello</div>;
}

4. Simple useEffect that fetches API (with return)
-

import { useEffect, useState } from 'react';

function Example() {
  const [data, setData] = useState(null);

  useEffect(() => {
    let ignore = false;

    fetch('https://api.example.com')
      .then(res => res.json())
      .then(json => {
        if (!ignore) setData(json);
      });

    return () => {
      ignore = true;
    };
  }, []);

  return <div>{data ? 'Loaded' : 'Loading...'}</div>;
}

5. Simple useEffect with event handler

import { useEffect } from 'react';

function Example() {
  useEffect(() => {
    function handleClick() {
      alert('Window clicked!');
    }

    window.addEventListener('click', handleClick);

    return () => {
      window.removeEventListener('click', handleClick);
    };
  }, []);

  return <div>Click anywhere</div>;
}

----

Click Event Handler that is used for clicking a button 


function Example() {
  function handleClick() {
    alert('Button clicked!');
  }

  return <button onClick={handleClick}>Click me</button>;
}


