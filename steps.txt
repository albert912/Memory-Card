What should happen?

*There should be ten different pokemon images on the page (these images should be fetch via API) and every time I click on one of them, it should be remembered-saved in a memory (and if I click on pokemon image for the first time the score point should be updated).


*Unless I click on the previously clicked pokemon image (as it is saved in memory before) score point should keep increase. 

*Best score point should mean this: Best score is the most points the player has reached before clicking the same Pokémon twice. Best score point should be updated based on this.

*There should be a function that displays the cards in a random order anytime a user clicks one. Be sure to invoke that function when the component mounts.

----

a. Establish the basic visual framework (scoreboards, card elements, placeholders for images and text) ✅ 

b. Create the dynamic aspects (fetching API using Effect, memorizing clicked image, enabling features like scoring and randomizing cards)

!Codes that will be used for this

(I need to fetch the sprites front default from Pokemon default json data) ✅ 









ii. (memorizing&saving clicked image)



!! I may need return statement (cleanup function) to prevent memory leaks 


iii. (randomizing cards after clicking on one of them)




!! I may want to cancel previous fetch requests to avoid updating state with outdated data, if I am fetching a new image each time the position is randomized.


iv. (updating score after clicking on non-memorized image (except for the first image))


v. (displaying the most points that the player has reached before clicking the same Pokémon twice)



c. style the UI	

----







